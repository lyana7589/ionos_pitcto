name: Build, Test, Deploy, and Run Maven Package

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      # Run tests with Maven
      - name: Test with Maven
        run: mvn -B test --file pom.xml

      # Build the project with Maven and create the .jar file
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      # Publish the package to GitHub Packages
      - name: Publish to GitHub Packages
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Deploy the .jar file to a remote server
      - name: Deploy .jar file
        run: |
          JAR_FILE=$(find target -name "*.jar" | head -n 1)
          echo "Deploying $JAR_FILE"
          scp -o StrictHostKeyChecking=no $JAR_FILE ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_PATH }}
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}

      # Run the .jar file on the remote server (example)
      - name: Run .jar file on remote server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "java -jar ${DEPLOY_PATH}/$(basename $JAR_FILE)"
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
